# Le site de Babelio

L'adresse pour accéder à Babelio est <https://www.babelio.com/>.

La page d'accueil de Babelio dit: "Babelio est un réseau social dédié aux livres et aux lecteurs.
Il permet de créer et d’organiser sa bibliothèque en ligne, d’obtenir des informations sur des œuvres,
de partager et d’échanger ses goûts et impressions littéraires avec d’autres lecteurs."

Il n'est pas besoin de s'identifier pour obtenir des informations.
(ce qui évite la gestion d'un acompte dans le plugin)

J'ai développé ce plugin de calibre d'après le plugin existant de VdF pour résoudre une série de
limitations que je rencontre:

1. Il n'y pas de référence (id) qui permet de retrouver le URL, ni de moyen d'ajouter un id depuis
  le url par manque des deux routines suivantes:
   * get_book_url : used by calibre to convert the identifier to a URL...
   * id_from_url : takes an URL and extracts the identifier details...
  OK
2. Dès que le contenu de Babelio est remonté, TOUTE l'information est traduite en utf8,
  TOUS les outputs (logs...) et les inputs (ce qui est lu sur le site...) sont en utf8...
  les multiples conversions me rendent le code confus
  OK pour __init__.py
3. un seul matches même si deux livres répondent à la recherche
  OK
4. la compatibilité avec python 2.x me semble obsolète et perturbant.
  OK pour __init.py
5. Identify() devrait être invoqué avec NAME_ID puis ISBN et si ça marche pas
  avec titre + auteur... titre seul.
  OK
6. un config.py est OK mais je préfère utiliser le config intégré, bien suffisant.
  OK
7. Babelio donne dans le titre le nom de la série et son n° de tome (ordre dans la série),
  je vais essayer de l'introduire (et vérifier que toutes mes séries y répondent...)

8. Je préfère nettement les commentaires en HTML et beautifulsoup (utilisé dans calibre par ailleurs)
  OK pour __init__.py
9. J'ai horreur de ce langage de recherche et substitution (expression régulière) auquel
  je ne comprends pratiquement rien... enfin, un tout petit peu quoi!
  OK pour __init__.py

Ce travail effectué, je ferai parvenir à VdF les sources... Il pourrait, si il veut, améliorer sa version.
Sauf avis contraire de VdF, je ne publierai pas ce site sur calibre...
même si le travail restera visible sur github <https://github.com/lrpirlet/cal-babelio_db>

Ce travail est open source... J'ai pris du plaisir à l'écrire, si vous pensez que ce travail
  doit être rétribué, choisissez une association caritative et donnez leur, un peu, avec une
  mention comme "Thanks to Louis Richard" ou "Merci à Louis Richard" ou quelque chose de
  similaire dans votre langue. Cela renforcera ma réputation (non publiée)...

Quelle charité ? Mes pires cauchemars impliquent le feu, donc je donne pour les enfants
  profondément brûlés... Ma femme a peur du cancer donc elle donne à la recherche sur le cancer,
  nous nous sentons tous les deux mal à l'aise face aux gens qui meurent de faim donc nous donnons
  au "resto du Cœur"...

Malheureusement, il y a toujours quelqu'un qui a besoin d'aide et qui ne pourra pas rembourser
(sauf peut-être avec une pensée pour l'inconnu qui l'a aidé). Il y a donc l'embarras du choix.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Source sur github: <https://github.com/lrpirlet/cal-babelio_db>

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

ajout d'une série de routine dans __init__.py. Elles ne sont pas dans la class Babelio.

def urlopen_with_retry(log, dbg_lvl, br, url, rkt, who):
    '''
    this is an attempt to keep going when the connection to the site fails for no (understandable) reason
    "return (sr, sr.geturl())" with sr.geturl() the true url address of sr (the content).
    '''
def ret_soup(log, dbg_lvl, br, url, rkt=None, who=''):
    '''
    Function to return the soup for beautifullsoup to work on. with:
    br is browser, url is request address, who is an aid to identify the caller
    rkt list of arguments for a POST request, if rkt is None, the request is GET
    return (soup, url_ret)
    '''
def verify_isbn(log, dbg_lvl, isbn_str, who=''):
    '''
    isbn_str est brute d'extraction... la fonction renvoie un isbn correct ou "invalide"
    Notez qu'on doit supprimer les caractères de séparation et les caractères restants apres extraction
    et que l'on traite un mot de 10 ou 13 caractères.

    isbn_str is strait from extraction... function returns an ISBN maybe correct ...or not
    Characters irrelevant to ISBN and separators inside ISBN must be removed,
    the resulting word must be either 10 or 13 characters long.
    '''
def ret_clean_text(log, dbg_lvl, text, swap=False, who=''):
    '''
    for the site search to work smoothly, authors and title needs to be cleaned
    we need to remove non significant characters and remove useless space character...
    Calibre per default presents the author as "Firstname Lastname", cleaned to
    become "firstname lastname"  Noosfere present the author as "LASTNAME Firstname",
    let's get "Firstname LASTNAME" cleaned to "firstname lastname"
    '''
impose une version de calibre minimum: minimum_calibre_version = (6, 3, 0)

Dans __init__.py enlève les appels à encode() et à decode(),
documente toutes les fonctions et méthodes. Ainsi, Visual Studio me montre dans une bulle
toutes leurs informations relatives.
introduit une série de log pour mieux suivre le flot du code.
------------------------------------------------------------------
introduis
  __copyright__ = '2021, Louis Richard Pirlet using VdF work as a base'
  ID_NAME = 'bbl_id'
  def get_book_url(self, identifiers):
        '''
        get_book_url : used by calibre to convert the identifier to a URL...
        return an url if nsfr_id exists and is valid
        '''
  def id_from_url(self, url):
        '''
        id_from_url : takes an URL and extracts the identifier details...
        '''
  redéfini l'accès a Babelio en utilisant ret_soup(), verify_isbn() et ret_clean_text()
  enlève du code non utilisé ou jamais atteint
  supprime le processing des cookies (le site répond aussi bien...)
--------------------------------------------------------------------
Le plugin est vraiment très lent ce soir... Ajoute des timers pour déterminer où est le ralentissement.
Il semble qu'accéder à l'image peut être extrêmement long quand cette image n'est pas sur le site de Babelio..
En fait, accéder à l'image dans la méthode parse_cover() de worker.py n'est pas vraiment utile...
On peut voir que l'image est invalide au moment d'en faire le téléchargement...
Supprimer ce code de vérification accélère beaucoup le plugin... sans nuire aucunement à la qualité.
--------------------------------------------------------------------
retravaille identify() pour réagir sur les identifiers avant de réagir sur tire/auteurs
ça marche à peu près, faudra y revenir... (mais ne sera plus documenté)
--------------------------------------------------------------------
Introduit les messages de debug sélectif... ce qui implique de modifier le config.py...
je fini par le supprimer pour implémenter la configuration interne... Ceci me permet de documenter
la configuration du plugin Babelio..
--------------------------------------------------------------------
documente les méthodes dans worker.py
Améliore la recherche quand le titre est trop imprécis... essayer œdipe roi sans auteur défini (et sans id...)
--------------------------------------------------------------------
Limite sévèrement le nombre d'accès au site Babelio.com pour éviter de voir l'accès au site interdit
(le site répond time-out !pendant une semaine! ) quand un trop grand nombre de requêtes est formulés...
--------------------------------------------------------------------
documente et nettoie __init__.py
introduit une section test du plugin... l'algorithme de détection des auteurs doit être revu...
    [worker 1] self.url            :  https://www.babelio.com/livres/lePetitLitterairefr-Fiche-de-lecture--Limonov-dEmmanuel
    ...

    ****************************** Relevance: 1 ******************************
    Title               : Fiche de lecture : Limonov d'Emmanuel Carrère
    Author(s)           : Lepetitlittéraire.fr
    Tags                :  Réflexions  ,  Russe
    Languages           : fr
    Rating              : 4.5
    Identifiers         : Babelio:lePetitLitterairefr-Fiche-de-lecture--Limonov-dEmmanuel-Carrere/409829
    ...

    Author test failed. Expected: '{'emmanuel carrère'}' found '{'lepetitlittéraire.fr'}'
    ...
Introduit un fichier expliquant la licence, un readme.md pour github
--------------------------------------------------------------------
